worker_processes auto;

events { worker_connections 8; }

http {
    include  /etc/nginx/mime.types;
    upstream node-app {
        hash $remote_addr consistent;
        server node1:4000;
        server node2:4000;
    }

    #http://localhost:8080/...
    ##server {
    ##    listen 80;

    ##    location /socket.io/ {
    ##        proxy_http_version 1.1;
    ##        proxy_set_header Upgrade $http_upgrade;
    ##        proxy_set_header Connection "upgrade";
    ##        proxy_pass http://node-app/socket.io/;
    ##    }

    ##    location ~* ^(?!/socket.io/).*\.(js|jpg|png|css|map|mp4)$ {
    ##        root /usr/nginx/static;
    ##        expires 30d;
    ##    }

    ##    location / {
    ##        proxy_pass http://node-app;
    ##        #if ($request_method = POST) 
    ##        #{
    ##        #    proxy_pass http://node-app;
    ##        #}
    ##    }
    ##    
    ##    #location /api/ {
    ##    #    proxy_pass http://node-app;
    ##    #}
    ##}

    server {
        

        listen 443 ssl;
        listen [::]:443 ssl;
        # root /usr/nginx/static;

        # certs sent to the client in SERVER HELLO are concatenated in ssl_certificate
        ssl_certificate /etc/nginx/certs/nginx.crt;
        ssl_certificate_key /etc/nginx/certs/nginx.key; 
        ssl_session_timeout 5m;
        ssl_session_cache shared:SSL:50m;

        # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
        ssl_dhparam /etc/nginx/certs/dhparam.pem;


        # modern configuration. tweak to your needs.
        ssl_protocols TLSv1.1 TLSv1.2;
        ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
        ssl_prefer_server_ciphers on;

        # HSTS (ngx_http_headers_module is required) (15768000 seconds = 6 months)
        add_header Strict-Transport-Security max-age=15768000;  
        # Uncommment this line and add your domain here!
        server_name localhost;

        location /socket.io/ {
            #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            #proxy_set_header Host $host;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_pass http://node-app/socket.io/;
        }

        location ~* ^(?!/socket.io/).*\.(js|jpg|png|css|map|mp4)$ {
            root /usr/nginx/static;
            expires 30d;
        }

        location / {
            proxy_pass http://node-app;
            proxy_set_header  X-Real-IP  $remote_addr;
            proxy_set_header   Host      $http_host;
        }

    }
}
